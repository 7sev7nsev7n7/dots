# Configurations
binds {
  workspace_back_and_forth = true
}

# Disable all binds
bind = super,f1,exec,hyprctl dispatch submap disable; dunstify -a "$HOSTNAME" "Disabled keybinds"
submap = disable
bind = super,f1,exec,hyprctl dispatch submap reset; dunstify -a "$HOSTNAME" "Enabled keybinds"
submap = reset

# General

# Open wofi
bind = supershift, super_l, exec, if [ "$(ps -e | grep -o wofi)" == "" ]; then prime-run wofi -p "[GPU]> "; else pkill wofi; fi
bind = super, super_l, exec, if [ "$(ps -e | grep -o wofi)" == "" ]; then wofi -p ">"; else pkill wofi; fi

# Open kitty
bind = super, q, exec, kitty

# Open ranger
bind = super, e, exec, [float; size 1000 500] kitty ranger

# Kill window
bind = super, x, killactive

# Force kill window
bind = supershift, x, forcekillactive

# Exit
bind = supershift, escape, exec, pkill xrdb
bind = supershift, escape, exit 


# Theme
bind = super, w, exec, ~/.scripts/colors/cwallchoose.sh ~/media/pictures/wallpapers

# Keyboard Lighting
bind = supershift, left, exec, ~/.scripts/colors/keyboard.sh -1
bind = supershift, right, exec, ~/.scripts/colors/keyboard.sh 1

# Gscreenshot
bind = shift, print, exec, gscreenshot
bind = super, prior, exec, gscreenshot
bind = supershift, prior, exec, gscreenshot -s -c

# CopyQ menu
bind = supershift, c, exec, copyq show

# Swaylock
bind = superctrlshift, l, exec, ~/.scripts/hypr/lock.sh

# Waybar
bind = super, b, exec, pkill -SIGUSR1 waybar
bind = supershift, b, exec, pkill waybar; waybar

# Hyprpicker
bind = super, c, exec, hyprctl keyword input:sensitivity -1; hyprpicker -a; hyprctl keyword input:sensitivity 0

# Backlight
bindle = , XF86MonBrightnessDown, exec, backlight_control -5
bindle = , XF86MonBrightnessUp, exec, backlight_control +5
bindle = shift, XF86MonBrightnessDown, exec, backlight_control 0
bindle = shift, XF86MonBrightnessUp, exec, backlight_control 100

# Audio
bindle = , XF86AudioPrev, exec, playerctl previous
bindle = , XF86AudioPlay, exec, playerctl play-pause
bindle = , XF86AudioNext, exec, playerctl next
bindle = , XF86AudioMute, exec, pamixer -t # hardware keyboard
bindle = , XF86AudioLowerVolume, exec, pamixer -d 5 # hardware keyboard
bindle = , XF86AudioRaiseVolume, exec, pamixer -i 5 # hardware keyboard

# Dunst
bindn = , escape, exec, dunstctl close-all; 
bindn = super, escape, exec, dunstctl close-all; dunstctl history-clear
bind = super, n, exec, dunstctl history-pop
bind = superctrl, n, exec, dunstctl set-paused toggle; if [ "$(dunstctl is-paused)" == "false" ]; then dunstify -a $HOSTNAME "Notifications" "Resumed notifications"; fi 

# Toggle touchpad
bind = super, f10, exec, file=~/.config/hypr/touchpad.conf; if [[ $(sed -nE 's/enabled = (.)/\1/p' $file) -eq 0 ]]; then en=1; msg="Enabled"; else en=0; msg="Disabled"; fi; sed -Ei "s/enabled = ./enabled = $en/" $file; dunstify -a "$HOSTNAME" "$msg touchpad"

# Switch keyboard layout
bindl = super, space, exec, if [ "$(hyprctl getoption input:kb_layout | sed -nE 's/str: (.*)/\1/p')" == "latam" ]; then hyprctl keyword input:kb_layout us; lang="us"; else hyprctl keyword input:kb_layout latam; lang="latam"; fi; dunstify -a "$HOSTNAME" "Set keyboard layout to $lang"

# Window controls
binde = super, h, movefocus, l
binde = super, l, movefocus, r
binde = super, k, movefocus, u
binde = super, j, movefocus, d
binde = alt, tab, cyclenext
binde = altshift, tab, cyclenext, prev
bind = super, s, toggleswallow
bind = super, g, exec, ~/.scripts/hypr/gaps.sh

# Moving windows
bind = supershift, h, layoutmsg, addmaster
binde = supershift, h, moveactive,-50 0
bind = supershift, l, layoutmsg, removemaster
binde = supershift, l, moveactive, 50 0
bind = supershift, k, swapwindow, u
binde = supershift, k, moveactive, 0 -50
bind = supershift, j, swapwindow, d
binde = supershift, j, moveactive, 0 50
bind = super, v, togglefloating, 

# Resizing windows
binde = superctrl, h, resizeactive, -50 0
binde = superctrl, l, resizeactive, 50 0
binde = superctrl, j, resizeactive, 0 50
binde = superctrl, k, resizeactive, 0 -50

# Hiding/showing windows
bind = super, d, exec, hyprctl dispatch workspace name:~; pkill -SIGUSR1 waybar; hyprctl dispatch submap hide
submap = hide
bind = ,catchall, exec, hyprctl dispatch workspace previous; pkill -SIGUSR2 waybar; hyprctl dispatch submap reset
submap = reset

# Fullscreen
bind = super, f, fullscreen
bind = super, m, fullscreen, 1
bind = supershift, f, fullscreenstate, 0 3
bind = super, p, pin

# Switch workspaces with mainMod + [0-9]
bind = super, 1, workspace, 1
bind = super, 2, workspace, 2
bind = super, 3, workspace, 3
bind = super, 4, workspace, 4
bind = super, 5, workspace, 5
bind = super, 6, workspace, 6
bind = super, 7, workspace, 7
bind = super, 8, workspace, 8
bind = super, 9, workspace, 9
bind = super, 0, workspace, 10
binde = super, tab, workspace, e+1
binde = supershift, tab, workspace, e-1
bind = super, a, togglespecialworkspace, a

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = supershift, 1, movetoworkspace, 1
bind = supershift, 2, movetoworkspace, 2
bind = supershift, 3, movetoworkspace, 3
bind = supershift, 4, movetoworkspace, 4
bind = supershift, 5, movetoworkspace, 5
bind = supershift, 6, movetoworkspace, 6
bind = supershift, 7, movetoworkspace, 7
bind = supershift, 8, movetoworkspace, 8
bind = supershift, 9, movetoworkspace, 9
bind = supershift, 0, movetoworkspace, 10
bind = supershift, a, movetoworkspace, special a

# Cycle windows 
bind = super, left, layoutmsg, rollnext
bind = super, right, layoutmsg, rollprev

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = super, mouse:272, movewindow
bindm = super, mouse:273, resizewindow

-- Name:         vimper
-- Description:  Customized vim colorscheme
-- Author:       7sev7nsev7n7
-- License:      Same as Vim

-- This is Vim's default color scheme, improved. It doesn't define the Normal
-- highlighting, it uses whatever the colors used to be.

vim.cmd.highlight('clear')
vim.g.colors_name = 'vimper'

local hi = function(name, val)
  -- Force links
  val.force = true

  -- Make sure that `cterm` attribute is not populated from `gui`
  val.cterm = val.cterm or {}

  -- Define global highlight
  vim.api.nvim_set_hl(0, name, val)
end

--stylua: ignore start
-- General
hi('Normal',                {})
hi('Conceal',               {ctermfg='LightGrey',    ctermbg=8})
hi('Cursor',                {})
hi('lCursor',               {})
hi('DiffText',              {ctermbg='Blue',         cterm={bold=true}})
hi('ErrorMsg',              {ctermfg='Black',        ctermbg='DarkYellow'})
hi('IncSearch',             {cterm={reverse=true}})
hi('ModeMsg',               {cterm={bold=true}})
hi('NonText',               {ctermfg=8})
hi('PmenuSbar',             {ctermbg='Grey'})
hi('StatusLine',            {ctermbg='DarkRed',      ctermfg='Black',        cterm={bold=true}})
hi('StatusLineNC',          {ctermbg='Black',        ctermfg='DarkRed'})
hi('TabLineFill',           {cterm={reverse=true}})
hi('TabLineSel',            {cterm={bold=true}})
hi('TermCursor',            {cterm={reverse=true}})
hi('WinBar',                {cterm={bold=true}})
hi('WildMenu',              {ctermfg='Black',        ctermbg='Yellow'})
hi('FloatShadow',           {blend=80})
hi('FloatShadowThrough',    {blend=100})
hi('RedrawDebugNormal',     {reverse=true,           cterm={reverse=true}})
hi('RedrawDebugClear',      {ctermbg='Yellow'})
hi('RedrawDebugComposed',   {ctermbg='Green'})
hi('RedrawDebugRecompose',  {ctermbg='Red'})
hi('Error',                 {ctermbg='Red'})
hi('Todo',                  {ctermbg='Yellow'})

hi('VertSplit',       {link='Normal'})
hi('WinSeparator',    {link='VertSplit'})
hi('WinBarNC',        {link='WinBar'})
hi('EndOfBuffer',     {link='NonText'})
hi('LineNrAbove',     {link='LineNr'})
hi('LineNrBelow',     {link='LineNr'})
hi('QuickFixLine',    {link='Search'})
hi('CursorLineSign',  {link='SignColumn'})
hi('CursorLineFold',  {link='FoldColumn'})
hi('CurSearch',       {link='Search'})
hi('PmenuKind',       {link='Pmenu'})
hi('PmenuKindSel',    {link='PmenuSel'})
hi('PmenuExtra',      {link='Pmenu'})
hi('PmenuExtraSel',   {link='PmenuSel'})
hi('Substitute',      {link='Search'})
hi('Whitespace',      {link='NonText'})
hi('MsgSeparator',    {link='StatusLine'})
hi('NormalFloat',     {link='Pmenu'})
hi('FloatBorder',     {link='WinSeparator'})
hi('FloatTitle',      {link='Title'})
hi('FloatFooter',     {link='Title'})

hi('String',          {ctermfg='DarkBlue'})
hi('Character',       {link='Constant'})
hi('Number',          {link='Constant'})
hi('Boolean',         {link='Constant'})
hi('Float',           {link='Number'})
hi('Function',        {link='Identifier'})
hi('Conditional',     {link='Statement'})
hi('Repeat',          {link='Statement'})
hi('Label',           {link='Statement'})
hi('Operator',        {link='Statement'})
hi('Keyword',         {link='Statement'})
hi('Exception',       {link='Statement'})
hi('Include',         {link='PreProc'})
hi('Define',          {link='PreProc'})
hi('Macro',           {link='PreProc'})
hi('PreCondit',       {link='PreProc'})
hi('StorageClass',    {link='Type'})
hi('Structure',       {link='Type'})
hi('Typedef',         {link='Type'})
hi('Tag',             {link='Special'})
hi('SpecialChar',     {link='Special'})
hi('Delimiter',       {link='Special'})
hi('SpecialComment',  {link='Special'})
hi('Debug',           {link='Special'})

hi('DiagnosticError',             {ctermfg=1})
hi('DiagnosticWarn',              {ctermfg=3})
hi('DiagnosticInfo',              {ctermfg=4})
hi('DiagnosticHint',              {ctermfg=7})
hi('DiagnosticOk',                {ctermfg=10})
hi('DiagnosticUnderlineError',    {cterm={underline=true}})
hi('DiagnosticUnderlineWarn',     {cterm={underline=true}})
hi('DiagnosticUnderlineInfo',     {cterm={underline=true}})
hi('DiagnosticUnderlineHint',     {cterm={underline=true}})
hi('DiagnosticUnderlineOk',       {cterm={underline=true}})
hi('DiagnosticVirtualTextError',  {link='DiagnosticError'})
hi('DiagnosticVirtualTextWarn',   {link='DiagnosticWarn'})
hi('DiagnosticVirtualTextInfo',   {link='DiagnosticInfo'})
hi('DiagnosticVirtualTextHint',   {link='DiagnosticHint'})
hi('DiagnosticVirtualTextOk',     {link='DiagnosticOk'})
hi('DiagnosticFloatingError',     {link='DiagnosticError'})
hi('DiagnosticFloatingWarn',      {link='DiagnosticWarn'})
hi('DiagnosticFloatingInfo',      {link='DiagnosticInfo'})
hi('DiagnosticFloatingHint',      {link='DiagnosticHint'})
hi('DiagnosticFloatingOk',        {link='DiagnosticOk'})
hi('DiagnosticSignError',         {link='DiagnosticError'})
hi('DiagnosticSignWarn',          {link='DiagnosticWarn'})
hi('DiagnosticSignInfo',          {link='DiagnosticInfo'})
hi('DiagnosticSignHint',          {link='DiagnosticHint'})
hi('DiagnosticSignOk',            {link='DiagnosticOk'})
hi('DiagnosticDeprecated',        {cterm={strikethrough=true}})

hi('DiagnosticUnnecessary',  {link='Comment'})
hi('LspInlayHint',           {link='NonText'})
hi('SnippetTabstop',         {link='Visual'})

--Text
hi('@markup.raw',        {link='Comment'})
hi('@markup.link',       {link='Identifier'})
hi('@markup.heading',    {link='Title'})
hi('@markup.link.url',   {link='Underlined'})
hi('@markup.underline',  {link='Underlined'})
hi('@comment.todo',      {link='Todo'})

--Miscs
hi('@comment',      {link='Comment'})
hi('@punctuation',  {link='Delimiter'})

--Constants
hi('@constant',           {link='Constant'})
hi('@constant.builtin',   {link='Special'})
hi('@constant.macro',     {link='Define'})
hi('@keyword.directive',  {link='Define'})
hi('@string',             {link='String'})
hi('@string.escape',      {link='SpecialChar'})
hi('@string.special',     {link='SpecialChar'})
hi('@character',          {link='Character'})
hi('@character.special',  {link='SpecialChar'})
hi('@number',             {link='Number'})
hi('@boolean',            {link='Boolean'})
hi('@number.float',       {link='Float'})

--Functions
hi('@function',                    {link='Function'})
hi('@function.builtin',            {link='Special'})
hi('@function.macro',              {link='Macro'})
hi('@function.method',             {link='Function'})
hi('@variable.parameter',          {link='Identifier'})
hi('@variable.parameter.builtin',  {link='Special'})
hi('@variable.member',             {link='Identifier'})
hi('@property',                    {link='Identifier'})
hi('@attribute',                   {link='Macro'})
hi('@attribute.builtin',           {link='Special'})
hi('@constructor',                 {link='Special'})

--Keywords
hi('@keyword.conditional',  {link='Conditional'})
hi('@keyword.repeat',       {link='Repeat'})
hi('@keyword.type',         {link='Structure'})
hi('@label',                {link='Label'})
hi('@operator',             {link='Operator'})
hi('@keyword',              {link='Keyword'})
hi('@keyword.exception',    {link='Exception'})

hi('@variable',           {link='Identifier'})
hi('@type',               {link='Type'})
hi('@type.definition',    {link='Typedef'})
hi('@module',             {link='Identifier'})
hi('@keyword.import',     {link='Include'})
hi('@keyword.directive',  {link='PreProc'})
hi('@keyword.debug',      {link='Debug'})
hi('@tag',                {link='Tag'})
hi('@tag.builtin',        {link='Special'})

--LSPsemantictokens
hi('@lsp.type.class',          {link='Structure'})
hi('@lsp.type.comment',        {link='Comment'})
hi('@lsp.type.decorator',      {link='Function'})
hi('@lsp.type.enum',           {link='Structure'})
hi('@lsp.type.enumMember',     {link='Constant'})
hi('@lsp.type.function',       {link='Function'})
hi('@lsp.type.interface',      {link='Structure'})
hi('@lsp.type.macro',          {link='Macro'})
hi('@lsp.type.method',         {link='Function'})
hi('@lsp.type.namespace',      {link='Structure'})
hi('@lsp.type.parameter',      {link='Identifier'})
hi('@lsp.type.property',       {link='Identifier'})
hi('@lsp.type.struct',         {link='Structure'})
hi('@lsp.type.type',           {link='Type'})
hi('@lsp.type.typeParameter',  {link='TypeDef'})
hi('@lsp.type.variable',       {link='Identifier'})

--Defaultcolorsonlyusedwithadarkbackground.
hi('ColorColumn',   {ctermbg='DarkRed'})
hi('CursorColumn',  {ctermbg='Grey'})
hi('CursorLine',    {cterm={underline=true}})
hi('CursorLineNr',  {reverse=true})
hi('DiffAdd',       {ctermbg='DarkBlue'})
hi('DiffChange',    {ctermbg='DarkMagenta'})
hi('DiffDelete',    {ctermbg=8})
hi('Directory',     {ctermfg='Magenta'})
hi('FoldColumn',    {ctermbg=8})
hi('Folded',        {ctermbg=8})
hi('LineNr',        {ctermfg=8})
hi('MatchParen',    {ctermbg='Yellow'})
hi('MoreMsg',       {ctermfg='Red'})
hi('Pmenu',         {ctermbg='Magenta'})
hi('PmenuSel',      {ctermbg='Black'})
hi('PmenuThumb',    {ctermfg='Black'})
hi('Question',      {ctermfg='Cyan'})
hi('Search',        {ctermbg='Yellow'})
hi('SignColumn',    {ctermbg=8})
hi('SpecialKey',    {ctermfg='Cyan'})
hi('SpellBad',      {ctermbg='Red'})
hi('SpellCap',      {ctermbg='Blue'})
hi('SpellLocal',    {ctermbg='Cyan'})
hi('SpellRare',     {ctermbg='Magenta'})
hi('TabLine',       {cterm={underline=true}})
hi('Title',         {ctermfg='DarkYellow'})
hi('Visual',        {ctermbg=8})
hi('WarningMsg',    {ctermfg='Red'})
hi('Comment',       {ctermfg=8})
hi('Constant',      {ctermfg='DarkMagenta'})
hi('Special',       {ctermfg='Yellow'})
hi('Identifier',    {ctermfg='Cyan',          cterm={bold=true}})
hi('Statement',     {ctermfg='DarkRed'})
hi('PreProc',       {ctermfg=8})
hi('Type',          {ctermfg='Cyan'})
hi('Underlined',    {cterm={underline=true}})
hi('Ignore',        {ctermfg='Black'})
